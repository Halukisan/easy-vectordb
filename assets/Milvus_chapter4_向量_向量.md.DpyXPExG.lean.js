import{_ as i,c as r,o as $,ag as o,j as t,a as l}from"./chunks/framework.DUcTBpf6.js";const e="/easy-vectordb/images/%E4%B8%8D%E5%90%8Ck%E2%82%81%E5%80%BC%E4%B8%8B%E7%9A%84%E8%AF%8D%E9%A2%91%E9%A5%B1%E5%92%8C%E6%9B%B2%E7%BA%BF.png",a="/easy-vectordb/images/12_9_1.png",s="/easy-vectordb/images/4_1.png",u="/easy-vectordb/images/4_2.png",g="/easy-vectordb/images/4_3.webp",p="/easy-vectordb/images/ColBERT%E6%9E%B6%E6%9E%84.webp",_="/easy-vectordb/images/4_4.webp",d="/easy-vectordb/images/img-0.jpeg",k=JSON.parse('{"title":"向量表示与检索技术：从传统方法到现代挑战","description":"","frontmatter":{},"headers":[],"relativePath":"Milvus/chapter4/向量/向量.md","filePath":"Milvus/chapter4/向量/向量.md","lastUpdated":1757340095000}'),m={name:"Milvus/chapter4/向量/向量.md"};function h(c,n,B,q,A,b){return $(),r("div",null,[...n[0]||(n[0]=[o("",158),t("p",null,[l("将所有不等式组合起来，我们就得到了： $$ \\text{rank}"),t("em",null,"+(2A - \\mathbf{1}"),l("{m \\times n}) - 1 \\le \\text{rank}"),t("em",{rt:""},"{rop} A = \\text{rank}"),l(" A \\le \\text{rank}"),t("em",null,"{gt} A \\le \\text{rank}"),l("+(2A - \\mathbf{1}_{m \\times n}) $$")],-1),o("",7),t("p",null,[l("我们首先回顾一下Meta论文 3.3 节的最终结论： $$ \\text{rank}"),t("em",null,"+(2A - \\mathbf{1}"),l("{m \\times n}) - 1 \\le \\text{rank}"),t("em",{rt:""},"{rop} A = \\text{rank}"),l(" A \\le \\text{rank}"),t("em",null,"{gt} A \\le \\text{rank}"),l("+(2A - \\mathbf{1}_{m \\times n}) $$")],-1),o("",12),t("h4",{id:"命题-1-对于一个二进制矩阵-a-in-0-1-m-times-n-我们有-text-rank-rop-a-text-rank-a-。",tabindex:"-1"},[l("命题 1：对于一个二进制矩阵 $A \\in {0,1}^{m \\times n}$，我们有 $\\text{rank}"),t("em",{rt:""},"{rop} A = \\text{rank}"),l(" A$。 "),t("a",{class:"header-anchor",href:"#命题-1-对于一个二进制矩阵-a-in-0-1-m-times-n-我们有-text-rank-rop-a-text-rank-a-。","aria-label":'Permalink to "命题 1：对于一个二进制矩阵 $A \\in \\{0,1\\}^{m \\times n}$，我们有 $\\text{rank}_{rop} A = \\text{rank}_{rt} A$。"'},"​")],-1),t("ul",null,[t("li",null,[t("p",null,[t("strong",null,"证明目标："),l(" 证明这两种“秩”是等价的，即如果一个 $d$ 维嵌入能满足一种条件，它也能满足另一种条件，反之亦然。")])]),t("li",null,[t("p",null,[t("strong",null,[l("1. 证明 $\\text{rank}"),t("em",{rt:""},"{rop} A \\le \\text{rank}"),l(" A$")]),l(" (即：如果能做到阈值分离，就能做到顺序保持)")]),t("ul",null,[t("li",null,[l("在解释这个证明之前，先介绍几个关键名词和符号： "),t("ul",null,[t("li",null,[t("strong",null,"二进制矩阵 $A$"),l("：$A \\in {0,1}^{m \\times n}$ 是一个 $m$ 行 $n$ 列的矩阵，通常用于表示检索任务中的相关性矩阵，其中 $m$ 表示查询的数量，$n$ 表示文档的数量。$A_{ij}$ 表示第 $i$ 个查询与第 $j$ 个文档是否相关，$A_{ij} = 1$ 表示相关，$A_{ij} = 0$ 表示不相关。")]),t("li",null,[t("strong",null,"$\\text{rank}_{rop} A$"),l("：表示实现行级顺序保持所需的矩阵 $A$ 的最小秩。行级顺序保持指的是，如果对于某个查询 $i$，文档 $j$ 比文档 $k$ 与该查询更相关（即 $A_{ij} > A_{ik}$），那么对应表示矩阵中的得分也应满足相应的顺序关系。")]),t("li",null,[t("strong",null,"$\\text{rank}_{rt} A$"),l("：表示实现行级阈值分离所需的矩阵 $A$ 的最小秩。行级阈值分离指的是，对于每个查询 $i$，存在一个阈值 $t_i$，可以根据这个阈值区分相关文档和不相关文档。")]),t("li",null,[t("strong",null,"矩阵的秩"),l("：矩阵的秩是矩阵中线性无关的行或列的最大数量，它反映了矩阵所包含的有效信息的维度。")]),t("li",null,[t("strong",null,"矩阵 $B$"),l("：一个用于表示查询 - 文档相关性得分的矩阵，其秩为 $d$。")]),t("li",null,[t("strong",null,"行级阈值 ${t_i}_{i=1}^m$"),l("：一组阈值，每个查询 $i$ 对应一个阈值 $t_i$，用于区分该查询下的相关文档和不相关文档。")])])])]),t("ul",null,[t("li",null,[t("strong",null,"假设："),l(" 假设存在一个秩为 $d$ 的矩阵 $B$ 和一组行级阈值 ${t_i}"),t("em",{ij:""},"{i=1}^m$，使得 $B$ 满足行级阈值条件（即如果 $A"),l("=1$ 表示第 $i$ 个查询与第 $j$ 个文档相关，则 $B_{ij} > t_i$；如果 $A_{ij}=0$ 表示第 $i$ 个查询与第 $j$ 个文档不相关，则 $B_{ij} < t_i$）。")]),t("li",null,[t("strong",null,"推导："),l(" 我们需要证明 $B$ 也满足行级顺序保持条件。 "),t("ul",null,[t("li",null,"考虑任意查询 $i$，以及文档 $j$ 和 $k$。这里的查询 $i$ 可以理解为一次检索请求，文档 $j$ 和 $k$ 是检索结果中的两个文档。"),t("li",null,"如果 $A_{ij} > A_{ik}$，因为 $A$ 是二进制矩阵，元素只能取 0 或 1，所以这意味着 $A_{ij}=1$ （第 $i$ 个查询与第 $j$ 个文档相关）而 $A_{ik}=0$ （第 $i$ 个查询与第 $k$ 个文档不相关）。"),t("li",null,"根据行级阈值条件，由于 $A_{ij}=1$ 则 $B_{ij} > t_i$，$A_{ik}=0$ 则 $B_{ik} < t_i$。也就是说，相关文档 $j$ 在矩阵 $B$ 中的得分大于阈值 $t_i$，不相关文档 $k$ 在矩阵 $B$ 中的得分小于阈值 $t_i$。"),t("li",null,"因此，由 $B_{ij} > t_i$ 和 $B_{ik} < t_i$，可以直接得出 $B_{ij} > B_{ik}$。这表明在矩阵 $B$ 中，与查询 $i$ 更相关的文档 $j$ 的得分高于文档 $k$ 的得分。")])]),t("li",null,[t("strong",null,"结论："),l(" 这正是行级顺序保持的条件，即当查询 $i$ 下文档 $j$ 比文档 $k$ 更相关时，矩阵 $B$ 中对应文档 $j$ 的得分高于文档 $k$ 的得分。所以，如果 $B$ 能满足行级阈值条件，它也能满足行级顺序保持条件。这意味着实现行级阈值分离所需的最小秩（$\\text{rank}"),t("em",{rop:""},[l("{rt} A$）"),t("strong",null,"至少不小于"),l("实现行级顺序保持所需的最小秩（$\\text{rank}")]),l(" A$）。")])])]),t("li",null,[t("p",null,[t("strong",null,[l("2. 证明 $\\text{rank}"),t("em",{rop:""},"{rt} A \\le \\text{rank}"),l(" A$")]),l(" (即：如果能做到顺序保持，就能做到阈值分离)")]),t("ul",null,[t("li",null,[t("strong",null,"假设："),l(" 假设存在一个秩为 $d$ 的矩阵 $B$ 满足行级顺序保持条件（即如果 $A_{ij} > A_{ik}$ 则 $B_{ij} > B_{ik}$）。")]),t("li",null,[t("strong",null,"推导："),l(" 我们需要为每个查询 $i$ 找到一个阈值 $t_i$。 "),t("ul",null,[t("li",null,[l("对于每个查询 $i$，将文档分成两组： "),t("ul",null,[t("li",null,"$U_i = {B_{ij} \\mid A_{ij}=1}$ (相关文档的得分集合)"),t("li",null,"$L_i = {B_{ij} \\mid A_{ij}=0}$ (不相关文档的得分集合)")])]),t("li",null,"根据行级顺序保持条件，对于任何 $B_{ij} \\in U_i$ 和 $B_{ik} \\in L_i$，我们总是有 $B_{ij} > B_{ik}$。这意味着相关文档的最低得分总是高于不相关文档的最高得分。"),t("li",null,"因此，我们总是可以在 $\\max(L_i)$ 和 $\\min(U_i)$ 之间找到一个阈值 $t_i$。例如，可以取 $t_i = (\\max(L_i) + \\min(U_i))/2$。")])]),t("li",null,[t("strong",null,"结论："),l(" 这样我们就为每个查询 $i$ 找到了一个阈值 $t_i$，使得 $B$ 满足行级阈值条件。这意味着实现行级顺序保持所需的最小秩（$\\text{rank}"),t("em",{rt:""},[l("{rop} A$）"),t("strong",null,"至少不小于"),l("实现行级阈值分离所需的最小秩（$\\text{rank}")]),l(" A$）。")])])]),t("li",null,[t("p",null,[t("strong",null,"综合结论："),l(" 由于 $\\text{rank}"),t("em",{rt:""},"{rop} A \\le \\text{rank}"),l(" A$ 和 $\\text{rank}"),t("em",{rop:""},"{rt} A \\le \\text{rank}"),l(" A$ 同时成立，所以 $\\text{rank}"),t("em",{rt:""},"{rop} A = \\text{rank}"),l(" A$。")])])],-1),t("h4",{id:"命题-2-对于一个二进制矩阵-a-in-0-1-m-times-n",tabindex:"-1"},[l("命题 2：对于一个二进制矩阵 $A \\in {0,1}^{m \\times n}$： "),t("a",{class:"header-anchor",href:"#命题-2-对于一个二进制矩阵-a-in-0-1-m-times-n","aria-label":'Permalink to "命题 2：对于一个二进制矩阵 $A \\in \\{0,1\\}^{m \\times n}$："'},"​")],-1),t("p",null,[l("$$ \\text{rank}"),t("em",null,"+(2A - \\mathbf{1}"),l("{m \\times n}) - 1 \\le \\text{rank}"),t("em",{rt:""},"{rop} A = \\text{rank}"),l(" A \\le \\text{rank}"),t("em",null,"{gt} A \\le \\text{rank}"),l("+(2A - \\mathbf{1}_{m \\times n}) $$")],-1),t("p",null,"这个命题可以分解成三个不等式来证明：",-1),t("ul",null,[t("li",null,[t("p",null,[t("strong",null,[l("1. $\\text{rank}"),t("em",{gt:""},"{rt} A \\le \\text{rank}"),l(" A$")]),l(" (即：全局阈值分离比行级阈值分离更难，所以实现它所需的维度不会更少)")]),t("ul",null,[t("li",null,[t("strong",null,"证明思路："),l(" 这部分很简单，根据定义即可。")]),t("li",null,[t("strong",null,"假设："),l(" 假设存在一个秩为 $d$ 的矩阵 $B$ 和一个全局阈值 $t$，满足全局阈值条件。")]),t("li",null,[t("strong",null,"推导："),l(" 这个全局阈值 $t$ 自然可以作为每个查询的行级阈值 $t_i$。因此，如果能满足全局阈值条件，就能满足行级阈值条件。")]),t("li",null,[t("strong",null,"结论："),l(" 这意味着实现全局阈值分离所需的最小秩（$\\text{rank}"),t("em",{rt:""},[l("{gt} A$）"),t("strong",null,"至少不小于"),l("实现行级阈值分离所需的最小秩（$\\text{rank}")]),l(" A$）。")])])]),t("li",null,[t("p",null,[t("strong",null,[l("2. $\\text{rank}"),t("em",null,"{gt} A \\le \\text{rank}"),l("+(2A - \\mathbf{1}_{m \\times n})$")]),l(" (即：符号模式能被低维表示，就能实现全局阈值分离)")]),t("ul",null,[t("li",null,[t("strong",null,"证明思路："),l(" 如果我们能找到一个低秩矩阵 $B'$ 来匹配符号矩阵 $M$ 的符号，那么这个 $B'$ 也可以用来实现全局阈值分离。")]),t("li",null,[t("strong",null,"令 $M = 2A - \\mathbf{1}_{m \\times n}$。")]),t("li",null,[t("strong",null,"假设："),l(" 假设 $\\text{rank}_+ M = d_s$。这意味着存在一个秩为 $d_s$ 的矩阵 $B'$，其符号与 $M$ 的符号相同。 "),t("ul",null,[t("li",null,"即，如果 $M_{ij}=1$，则 $B'_{ij} > 0$。"),t("li",null,"如果 $M_{ij}=-1$，则 $B'_{ij} < 0$。")])]),t("li",null,[t("strong",null,"推导："),l(" 我们需要证明这个 $B'$ 可以实现全局阈值分离。 "),t("ul",null,[t("li",null,"通过 $M$ 的定义，我们知道 $M_{ij}=1 \\iff A_{ij}=1$。"),t("li",null,[l("同时，通过 $B'$ 的性质，我们知道 $B'"),t("em",{ij:""},"{ij} > 0 \\iff M"),l("=1$。")]),t("li",null,[l("结合起来，我们得到 $B'"),t("em",{ij:""},"{ij} > 0 \\iff A"),l("=1$。")]),t("li",null,[l("这意味着我们可以使用全局阈值 $t=0$。如果 $A_{ij}=1$，则 $B'"),t("em",{ij:""},"{ij} > 0$；如果 $A"),l("=0$，则 $B'_{ij} < 0$。")])])]),t("li",null,[t("strong",null,"结论："),l(" 因此，矩阵 $B'$ 可以实现全局阈值分离，并且它的秩就是 $d_s$。所以，$\\text{rank}"),t("em",null,"{gt} A \\le d_s = \\text{rank}"),l("+(2A - \\mathbf{1}_{m \\times n})$。")])])]),t("li",null,[t("p",null,[t("strong",null,[l("3. $\\text{rank}"),t("em",null,"+(2A - \\mathbf{1}"),l("{m \\times n}) - 1 \\le \\text{rank}_{rt} A$")]),l(" (即：如果能实现行级阈值分离，那么符号模式的维度不会太高)")]),t("ul",null,[t("li",null,[t("p",null,[t("strong",null,"证明思路："),l(" 这是最复杂的一步。我们从满足行级阈值条件的低秩矩阵 $B$ 出发，构造一个新矩阵 $B^"),t("em",null,"$，并证明 $B^"),l("$ 的符号与 $M$ 的符号相同，且 $B^*$ 的秩只比 $B$ 的秩大 1。")])]),t("li",null,[t("p",null,[t("strong",null,"令 $M = 2A - \\mathbf{1}_{m \\times n}$。")])]),t("li",null,[t("p",null,[t("strong",null,"假设："),l(" 假设 $\\text{rank}"),t("em",{i:"1"},"{rt} A = d_r$。这意味着存在一个秩为 $d_r$ 的矩阵 $B$ 和一组行级阈值 ${t_i}"),l("^m$，使得 $B$ 满足行级阈值条件。")]),t("ul",null,[t("li",null,"即，如果 $A_{ij}=1$ 则 $B_{ij} > t_i$。"),t("li",null,"如果 $A_{ij}=0$ 则 $B_{ij} < t_i$。")])]),t("li",null,[t("p",null,[t("strong",null,"构造新矩阵 $B^*$："),l(" 考虑矩阵 $B^* = B - \\tau \\mathbf{1}_{m \\times n}$，其中 $\\tau$ 是一个列向量，其第 $i$ 个元素是 $t_i$。")]),t("ul",null,[t("li",null,"注意：这里原文写的是 $B - t \\mathbf{1}^T$，如果 $t$ 是一个列向量，$\\mathbf{1}^T$ 是行向量，那么 $t \\mathbf{1}^T$ 会生成一个秩为 1 的矩阵，其第 $i$ 行的所有元素都是 $t_i$。这正是我们想要的。")])]),t("li",null,[t("p",null,[t("strong",null,"推导 $B^*$ 的符号：")]),t("ul",null,[t("li",null,[t("strong",null,"情况一："),l(" 如果 $A_{ij}=1$。 "),t("ul",null,[t("li",null,"根据行级阈值条件，$B_{ij} > t_i$。"),t("li",null,"所以 $B_{ij} - t_i > 0$。"),t("li",null,"同时，$M_{ij} = 2A_{ij} - 1 = 2(1) - 1 = 1$。"),t("li",null,[l("所以，当 $A_{ij}=1$ 时，$B^*"),t("em",{ij:""},"{ij} > 0$ 且 $M"),l("=1$，它们的符号相同。")])])]),t("li",null,[t("strong",null,"情况二："),l(" 如果 $A_{ij}=0$。 "),t("ul",null,[t("li",null,"根据行级阈值条件，$B_{ij} < t_i$。"),t("li",null,"所以 $B_{ij} - t_i < 0$。"),t("li",null,"同时，$M_{ij} = 2A_{ij} - 1 = 2(0) - 1 = -1$。"),t("li",null,[l("所以，当 $A_{ij}=0$ 时，$B^*"),t("em",{ij:""},"{ij} < 0$ 且 $M"),l("=-1$，它们的符号相同。")])])]),t("li",null,[t("strong",null,"结论："),l(" 矩阵 $B^*$ 的所有元素的符号都与 $M$ 的对应元素的符号相同。")])])]),t("li",null,[t("p",null,[t("strong",null,"推导 $B^*$ 的秩：")]),t("ul",null,[t("li",null,[l("我们知道 $\\text{rank}(B - \\tau \\mathbf{1}"),t("em",null,"{m \\times n})$ 是 $B$ 的秩和秩为 1 的矩阵 $\\tau \\mathbf{1}"),l("{m \\times n}$ 的秩的和，或者更小（因为秩具有次可加性：$\\text{rank}(X+Y) \\le \\text{rank}(X) + \\text{rank}(Y)$）。")]),t("li",null,[l("具体来说，$\\text{rank}(B - \\tau \\mathbf{1}"),t("em",null,"{m \\times n}) \\le \\text{rank}(B) + \\text{rank}(\\tau \\mathbf{1}"),l("{m \\times n})$。")]),t("li",null,"$\\text{rank}(B) = d_r$ (根据假设)。"),t("li",null,"$\\text{rank}(\\tau \\mathbf{1}_{m \\times n}) = 1$ (这是一个由一个向量乘以一个全 1 向量的转置得到的矩阵，所以秩为 1)。"),t("li",null,"因此，$\\text{rank}(B^*) \\le d_r + 1$。"),t("li",null,[l("由于 $B^"),t("em",null,"$ 的符号与 $M$ 的符号相同，根据签秩的定义，$\\text{rank}_+ M \\le \\text{rank}(B^"),l(")$。")]),t("li",null,"所以，$\\text{rank}_+ M \\le d_r + 1$。"),t("li",null,[l("重新整理得到 $\\text{rank}"),t("em",{rt:""},"+ M - 1 \\le d_r = \\text{rank}"),l(" A$。")])])])])])],-1),o("",2)])])}const E=i(m,[["render",h]]);export{k as __pageData,E as default};
